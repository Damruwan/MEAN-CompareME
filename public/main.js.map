{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/addpost/addpost.component.css","webpack:///./src/app/components/addpost/addpost.component.html","webpack:///./src/app/components/addpost/addpost.component.ts","webpack:///./src/app/components/laptop/laptop.component.css","webpack:///./src/app/components/laptop/laptop.component.html","webpack:///./src/app/components/laptop/laptop.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/manage-phone/manage-phone.component.css","webpack:///./src/app/components/manage-phone/manage-phone.component.html","webpack:///./src/app/components/manage-phone/manage-phone.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/phone/phone.component.css","webpack:///./src/app/components/phone/phone.component.html","webpack:///./src/app/components/phone/phone.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/smartwatch/smartwatch.component.css","webpack:///./src/app/components/smartwatch/smartwatch.component.html","webpack:///./src/app/components/smartwatch/smartwatch.component.ts","webpack:///./src/app/components/tablet/tablet.component.css","webpack:///./src/app/components/tablet/tablet.component.html","webpack:///./src/app/components/tablet/tablet.component.ts","webpack:///./src/app/components/view-phone/view-phone.component.css","webpack:///./src/app/components/view-phone/view-phone.component.html","webpack:///./src/app/components/view-phone/view-phone.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/phone.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule,Routes } from '@angular/router';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { PhoneComponent } from './components/phone/phone.component';\nimport { LaptopComponent } from './components/laptop/laptop.component';\nimport { TabletComponent } from './components/tablet/tablet.component';\nimport { SmartwatchComponent } from './components/smartwatch/smartwatch.component';\nimport { AddpostComponent } from './components/addpost/addpost.component';\nimport { ManagePhoneComponent } from './components/manage-phone/manage-phone.component';\nimport { ViewPhoneComponent } from './components/view-phone/view-phone.component';\n\nimport { AuthService } from './services/auth.service';\nimport { PhoneService } from './services/phone.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n\n\n\n\n\nconst applicationRoutes:Routes = [\n    \n    {path:'login',component:LoginComponent},\n    {path:'register',component:RegisterComponent},\n    {path:'profile',component:ProfileComponent},\n    {path:'phone',component:PhoneComponent},\n    {path:'laptop',component:LaptopComponent},\n    {path:'tablet',component:TabletComponent},\n    {path:'smartwatch',component:SmartwatchComponent},\n    {path:'addpost',component:AddpostComponent},\n    {path:'managePhone',component:ManagePhoneComponent},\n    {path:'viewPhone',component:ViewPhoneComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    PhoneComponent,\n    LaptopComponent,\n    TabletComponent,\n    SmartwatchComponent,\n    AddpostComponent,\n    ManagePhoneComponent,\n    ViewPhoneComponent,\n \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(applicationRoutes),\n    FlashMessagesModule\n    \n  ],\n  providers: [AuthService, FlashMessagesService, PhoneService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  addpost works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-addpost',\n  templateUrl: './addpost.component.html',\n  styleUrls: ['./addpost.component.css']\n})\nexport class AddpostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  laptop works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-laptop',\n  templateUrl: './laptop.component.html',\n  styleUrls: ['./laptop.component.css']\n})\nexport class LaptopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\">\\n\\t<h2 class = \\\"page-header\\\">Login</h2>\\n\\t<form (submit) = \\\"loginUser()\\\">\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Email</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"email\\\" name =\\\"email\\\" class = \\\"form-control\\\">\\n\\t\\t</div>\\n\\t\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Password</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"password\\\" name =\\\"password\\\" class = \\\"form-control\\\">\\n\\t\\t</div>\\n\\t\\t<input type=\\\"submit\\\" class =\\\"btn btn-success\\\" value = \\\"Login\\\">\\n\\t</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email:String;\n  password:String;\n\n  constructor(\n     private authService:AuthService,\n     private flashMessage:FlashMessagesService,\n     private router:Router\n\n  ) { }\n\n  ngOnInit() {\n  }\n\n\t  loginUser(){\n\n\t    const user = {\n\t       email:this.email,\n\t       password:this.password\n\t    };\n\n        this.authService.loginUser(user).subscribe(res=>{\n\n           if(res.state) {\n             this.authService.storeData(res.token,res.user);\n             this.flashMessage.show(\"You're Loggedin\" , { cssClass: 'alert-success', times:3000});\n             this.router.navigate(['/profile']);\n          }else {\n             this.flashMessage.show(res.msg , { cssClass: 'alert-danger', times:3000});\n             this.router.navigate(['/login']);\n          }\n\n        })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\">\\n\\t<h2 class = \\\"page-header\\\"> Add Phone</h2>\\n\\t<form (submit) = \\\"addPhone()\\\">\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Image</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"phonepicture\\\" name =\\\"phonepicture\\\" class = \\\"form-control\\\">\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Model</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"model\\\" name =\\\"model\\\" class = \\\"form-control\\\">\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Technology</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"technology\\\" name =\\\"technology\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Announced</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"announced\\\" name =\\\"announced\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Status</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"status\\\" name =\\\"status\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Dimension</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"dimensions\\\" name =\\\"dimensions\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Weight</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"weight\\\" name =\\\"weight\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Sim</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"sim\\\" name =\\\"sim\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Display Type</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"displayType\\\" name =\\\"displayType\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Display Size</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"displaySize\\\" name =\\\"displaySize\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Display Resolution</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"displayResolution\\\" name =\\\"displayResolution\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Multitouch</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"multitouch\\\" name =\\\"multitouch\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>OS</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"os\\\" name =\\\"os\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Chipset</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"chipset\\\" name =\\\"chipset\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>CPU</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"cpu\\\" name =\\\"cpu\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>GPU</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"gpu\\\" name =\\\"gpu\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Cardsolt</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"cardsolt\\\" name =\\\"cardsolt\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Internam Memory</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"internalMemory\\\" name =\\\"internalMemory\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Primary Camera</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"primaryCamera\\\" name =\\\"primaryCamera\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Camera Features</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"cameraFeatures\\\" name =\\\"cameraFeatures\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Video</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"video\\\" name =\\\"video\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Secondary Camera</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"secondaryCamera\\\" name =\\\"secondaryCamera\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Alert Types</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"alertTypes\\\" name =\\\"alertTypes\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Loudspeaker</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"loudspeaker\\\" name =\\\"loudspeaker\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Audio Jack</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"audiojack\\\" name =\\\"audiojack\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Wlan</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"wlan\\\" name =\\\"wlan\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Bluetooth</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"bluetooth\\\" name =\\\"bluetooth\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>GPS</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"gps\\\" name =\\\"gps\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>NFC</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"nfc\\\" name =\\\"nfc\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Radio</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"radio\\\" name =\\\"radio\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>USB</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"usb\\\" name =\\\"usb\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Sensor</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"sensors\\\" name =\\\"sensors\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Messaging</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"messaging\\\" name =\\\"messaging\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Browser</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"browser\\\" name =\\\"browser\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Battery</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"battery\\\" name =\\\"battery\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Colors</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"colors\\\" name =\\\"colors\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Price</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"price\\\" name =\\\"price\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<input type=\\\"submit\\\" class =\\\"btn btn-success\\\" value = \\\"Add\\\">\\n\\t</form>\\n</div>\\n<hr>\\n<div class = \\\"container\\\">\\n\\t<div *ngFor = \\\"let phone of phones\\\">\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t{{phone.model}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t{{phone.phonepicture}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t{{phone.price}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t<input type=\\\"button\\\" (click) = \\\"deletePhone(phone._id)\\\" value= \\\"Delete\\\" class =\\\"btn btn-danger\\\">\\n\\t\\t\\t<br><br>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PhoneService } from '../../services/phone.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nimport { Phones } from '../../services/phone';\n\n@Component({\n  selector: 'app-manage-phone',\n  templateUrl: './manage-phone.component.html',\n  styleUrls: ['./manage-phone.component.css']\n})\nexport class ManagePhoneComponent implements OnInit {\n\n        phones: Phones[];\n\n        phonepicture : String;\n        model : String;\n        technology : String;\n        announced : String;\n        status : String;\n        dimensions : String;\n        weight : String;\n        sim : String;\n        displayType : String;\n        displaySize : String;\n        displayResolution : String;\n        multitouch : String;\n        os : String;\n        chipset : String;\n        cpu : String;\n        gpu : String;\n        cardslot: String;\n        internalMemory: String;\n        primaryCamera: String;\n        cameraFeatures: String;\n        video: String;\n        secondaryCamera: String;\n        alertTypes: String;\n        loudspeaker : String;\n        audiojack : String;\n        wlan: String;\n        bluetooth: String;\n        gps: String;\n        nfc: String;\n        radio: String;\n        usb: String;\n        sensors: String;\n        messaging: String;\n        browser: String;\n        battery: String;\n        colors: String;\n        price: String;\n\n        \n  constructor(\n        \n      private phoneService:PhoneService,\n      private flashMessage:FlashMessagesService,\n      private router:Router\n\n  ) { }\n\n  ngOnInit() {\n \n       this.phoneService.getPhone().subscribe(phone=>{\n          this.phones = phone;\n\n       })\n  }\n\n  addPhone(){\n    \n    const phone = {\n        phonepicture : this.phonepicture,\n        model : this.model,\n        technology : this.technology,\n        announced : this.announced,\n        status : this.status,\n        dimensions : this.dimensions,\n        weight : this.weight,\n        sim : this.sim,\n        displayType : this.displayType,\n        displaySize : this.displaySize,\n        displayResolution : this.displayResolution,\n        multitouch : this.multitouch,\n        os : this.os,\n        chipset : this.chipset,\n        cpu : this.cpu,\n        gpu : this.gpu,\n        cardslot: this.cardslot,\n        internalMemory: this.internalMemory,\n        primaryCamera: this.primaryCamera,\n        cameraFeatures: this.cameraFeatures,\n        video: this.video,\n        secondaryCamera: this.secondaryCamera,\n        alertTypes: this.alertTypes,\n        loudspeaker : this.loudspeaker,\n        audiojack : this.audiojack,\n        wlan: this.wlan,\n        bluetooth: this.bluetooth,\n        gps: this.gps,\n        nfc: this.nfc,\n        radio: this.radio,\n        usb: this.usb,\n        sensors: this.sensors,\n        messaging: this.messaging,\n        browser: this.browser,\n        battery: this.battery,\n        colors: this.colors,\n        price: this.price\n    };\n\n    this.phoneService.addPhone(phone).subscribe(phone=>{\n         this.phones.push(phone);\n         this.phoneService.getPhone().subscribe(phone=>{\n             this.phones = phone;\n         }); \n    });               \n\n }\n\n deletePhone(id:any)\n  {\n    var phone = this.phones;\n    this.phoneService.deletePhone(id).subscribe(data =>{\n            if(data.n==1)\n            {\n              for(var i =0; i< phone.length; i++)\n              {\n                if(phone[i]._id == id)\n                {\n                   phone.splice(i,1);\n                }\n              }\n            }\n        })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">CompareME</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a [routerLink]=\\\"['/phone']\\\">Phone</a></li>\\n        <li><a [routerLink]=\\\"['/laptop']\\\">Laptop</a></li>\\n        <li><a [routerLink]=\\\"['/tablet']\\\">Tablet</a></li>\\n        <li><a [routerLink]=\\\"['/smartwatch']\\\">Smart Watch</a></li>\\n      </ul>\\n      <form class=\\\"navbar-form navbar-left\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n        </div>\\n       <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n      </form>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n      <ul class=\\\"nav navbar-nav\\\">\\n          <li *ngIf=\\\"authService.loggedIn()\\\"><a [routerLink]=\\\"['/managePhone']\\\">Manage Phone</a></li>\\n          <li *ngIf=\\\"authService.loggedIn()\\\"><a [routerLink]=\\\"['/addpost']\\\">Add Post</a></li>\\n          <li *ngIf=\\\"authService.loggedIn()\\\"><a [routerLink]=\\\"['/profile']\\\">Hello {{this.user}}</a></li>\\n          <li *ngIf=\\\"!authService.loggedIn()\\\"><a [routerLink]=\\\"['/register']\\\">Register</a></li>\\n          <li *ngIf=\\\"!authService.loggedIn()\\\"><a [routerLink]=\\\"['/login']\\\">Login</a></li>\\n          <li *ngIf=\\\"authService.loggedIn()\\\"><a href=\\\"#\\\" (click)=\\\"logoutUser()\\\">Logout</a></li>\\n        </ul>\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->  \\n</nav>  \"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  user:any;\n\n  constructor(\n     private router:Router,\n     private authService:AuthService,\n     private flashMessage:FlashMessagesService\n\n  ) { }\n\n  ngOnInit() {\n     \n        this.user = this.authService.getName();\n            \n  }\n\n\n  logoutUser(){\n     \n     this.authService.logout();\n     this.flashMessage.show(\"You're Logged out\" , { cssClass: 'alert-success', times:3000});\n     this.router.navigate(['']);\n     return false;\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\">\\n  \\n\\t<div *ngFor = \\\"let phone of phones\\\">\\n\\t\\t\\n\\t\\t  <div class=\\\"col-md-2\\\" style=\\\"background-color: #cce0ff;height: 400px;\\\">\\n\\t\\t\\t<li>{{phone.model}}</li>\\n\\t\\t\\t<li>{{phone.phonepicture}}</li>\\n\\t\\t\\t<li>{{phone.price}}</li>\\n\\t\\t    <br>\\n\\t\\t\\t<input type=\\\"button\\\" (click) = \\\"viewPhone(phone._id)\\\" value= \\\"View\\\" class =\\\"btn btn-success\\\">\\n\\t\\t\\t<br><br>\\n\\t\\t  </div>\\n\\t\\t  \\n\\t</div>\\n  \\t\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { PhoneService } from '../../services/phone.service';\nimport { Phones } from '../../services/phone';\nimport { Router, NavigationExtras } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-phone',\n  templateUrl: './phone.component.html',\n  styleUrls: ['./phone.component.css']\n})\nexport class PhoneComponent implements OnInit {\n\n  phones: Phones[];\n\n  constructor(\n     private phoneService:PhoneService,\n     private router: Router\n  ) { }\n\n  ngOnInit() {\n\n      this.phoneService.getPhone().subscribe(phone=>{\n          this.phones = phone;\n\n      })\n  }\n\n  viewPhone(id:any){\n       let navigationExtras: NavigationExtras = {\n            queryParams: {\n                \"phone_id\": id\n            }\n        };\n        this.router.navigate([\"/viewPhone\"], navigationExtras);  \n  }\n    \n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n\\t{{user.user_name}}\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user:any;\n\n  constructor(\n      private authService:AuthService\n  ) { }\n\n  ngOnInit() {\n\n     this.authService.getProfile().subscribe(res=>{\n\n         this.user = res.user;\n\n     })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\">\\n\\t<h2 class = \\\"page-header\\\"> Register</h2>\\n\\t<form (submit) = \\\"registerData()\\\">\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Name</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"user_name\\\" name =\\\"user_name\\\" class = \\\"form-control\\\">\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Shop Name</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"shop_name\\\" name =\\\"shop_name\\\" class = \\\"form-control\\\">\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Shop Address</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"shop_address\\\" name =\\\"shop_address\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Registration No.</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"registration_no\\\" name =\\\"registration_no\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Contact No.</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"phone_no\\\" name =\\\"phone_no\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Email</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"email\\\" name =\\\"email\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Password</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"password\\\" name =\\\"password\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<input type=\\\"submit\\\" class =\\\"btn btn-success\\\" value = \\\"Submit\\\">\\n\\t</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  user_name:String;\n  shop_name:String;\n  shop_address:String;\n  registration_no:String;\n  phone_no:String;\n  email:String;\n  password:String;\n\n  constructor(\n      private authService:AuthService,\n      private flashMessage:FlashMessagesService,\n      private router:Router\n\n  ) { }\n\n  ngOnInit() {\n  }\n\n  registerData(){\n    \n    const user = {\n       user_name:this.user_name,\n       shop_name:this.shop_name,\n       shop_address:this.shop_address,\n       registration_no:this.registration_no,\n       phone_no:this.phone_no,\n       email:this.email,\n       password:this.password\n    };\n\n    this.authService.registerUser(user).subscribe(res=>{\n       if(res.state) {\n            this.flashMessage.show(\"You're Registered Successfully\" , { cssClass: 'alert-success', times:3000});\n            this.router.navigate(['/login']);\n       }else {\n            this.flashMessage.show(\"Something Went Wrong\" , { cssClass: 'alert-danger', times:3000});\n            this.router.navigate(['/register']);\n       }\n       \n    });\n\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  smartwatch works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-smartwatch',\n  templateUrl: './smartwatch.component.html',\n  styleUrls: ['./smartwatch.component.css']\n})\nexport class SmartwatchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  tablet works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tablet',\n  templateUrl: './tablet.component.html',\n  styleUrls: ['./tablet.component.css']\n})\nexport class TabletComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"phone\\\">\\n    <h2>Details</h2>\\n\\t    <li>{{phone.phonepicture}}</li>\\n\\t    <li>{{phone.model}}</li>\\n        <li>{{phone.technology}}</li>\\n        <li>{{phone.announced}}</li>\\n        <li>{{phone.status}}</li>\\n        <li>{{phone.dimensions}}</li>\\n        <li>{{phone.weight}}</li> \\n        <li>{{phone.sim}}</li>\\n        <li>{{phone.displayType}}</li>\\n        <li>{{phone.displaySize}}</li>\\n        <li>{{phone.displayResolution}}</li>\\n        <li>{{phone.multitouch}}</li>\\n        <li>{{phone.os}}</li>\\n        <li>{{phone.chipset}}</li>\\n        <li>{{phone.cpu}}</li>\\n        <li>{{phone.gpu}}</li>\\n        <li>{{phone.cardslot}}</li>\\n        <li>{{phone.internalMemory}}</li>\\n        <li>{{phone.primaryCamera}}</li>\\n        <li>{{phone.cameraFeatures}}</li>\\n        <li>{{phone.video}}</li>\\n        <li>{{phone.secondaryCamera}}</li>\\n        <li>{{phone.alertTypes}}</li>\\n        <li>{{phone.loudspeaker}}</li>\\n        <li>{{phone.audiojack}}</li>\\n        <li>{{phone.wlan}}</li>\\n        <li>{{phone.bluetooth}}</li>\\n        <li>{{phone.gps}}</li>\\n        <li>{{phone.nfc}}</li>\\n        <li>{{phone.radio}}</li>\\n        <li>{{phone.usb}}</li>\\n        <li>{{phone.sensors}}</li>\\n        <li>{{phone.messaging}}</li>\\n        <li>{{phone.browser}}</li>\\n        <li>{{phone.battery}}</li>\\n        <li>{{phone.colors}}</li>\\n        <li>{{phone.price}}</li>\\n</div>\\n\\n  \\n       \"","import { Component, OnInit } from '@angular/core';\nimport { PhoneService } from '../../services/phone.service';\nimport { ActivatedRoute } from \"@angular/router\";\n\n\n\n@Component({\n  selector: 'app-view-phone',\n  templateUrl: './view-phone.component.html',\n  styleUrls: ['./view-phone.component.css']\n})\nexport class ViewPhoneComponent implements OnInit {\n    public id: string;\n    phone: any;\n\n  constructor(\n     private phoneService:PhoneService,\n     private route:  ActivatedRoute \n  ) { \n     this.route.queryParams.subscribe(params => {\n            this.id = params[\"phone_id\"];\n        });\n  }\n\n  ngOnInit() {\n\n     this.phoneService.viewPhone(this.id).subscribe(phone=>{\n          this.phone = phone;\n     });  \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http,Headers, RequestOptions } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { tokenIsPresent } from 'ng2-bearer';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  user:any;\n  authtoken:any;\n  authuser:any;\n  authname:any;\n\n  constructor(\n     private http:Http,\n     private router:Router\n\n  ) { }\n\n  registerUser(user){\n\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     return this.http.post(\"http://localhost:3000/user/register\",user,{headers:headers}).pipe(map(res=>res.json()));\n\n  }\n\n  loginUser(user){\n     \n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     return  this.http.post(\"http://localhost:3000/user/login\",user,{headers:headers}).pipe(map(res=>res.json()));\n\n  }\n\n\n  getProfile(){\n\n     this.fetchToken();\n     let headers = new Headers({\"Authorization\": this.authtoken}) \n     let options = new RequestOptions({ headers: headers}); \n     return this.http.get(\"http://localhost:3000/user/profile\",options).pipe(map(res=>res.json()));\n\n  }\n\n\n  fetchToken(){\n     const token = localStorage.getItem(\"tokenid\");\n     this.authtoken = token;\n\n  }\n\n  getName(){\n    \n       const person = localStorage.getItem(\"user\");\n       if(person != null){\n           this.authuser = JSON.parse(person);\n           this.authname = this.authuser.user_name;\n           return this.authname;\n       }  \n       \n\n  }\n\n  storeData(token,userdata){\n\n     localStorage.setItem(\"tokenid\",token);\n     localStorage.setItem(\"user\",JSON.stringify(userdata));\n     this.authtoken = token;\n     this.user = userdata;\n\n  }\n\n  logout(){\n\n     this.authtoken = null;\n     this.user = null;\n     localStorage.clear();\n\n  }\n\n  \n\n  loggedIn() {\n    this.fetchToken();\n    if(this.authtoken != null ){\n       return true;\n    }\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http,Headers, RequestOptions } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhoneService {\n\n  phone:any;\n\n  constructor(\n      \n     private http:Http,\n     private router:Router\n\n  ) { }\n\n  addPhone(phone){\n\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     return this.http.post(\"http://localhost:3000/phone/managePhone\",phone,{headers:headers}).pipe(map(res=>res.json()));\n\n  }\n\n  getPhone(){\n\n\t  return this.http.get('http://localhost:3000/phone/managephone').pipe(map(res => res.json()));\n  }\n\n\n  deletePhone(id){\n\n\t  return this.http.delete('http://localhost:3000/phone/managePhone/'+id)\n\t    .pipe(map(res => res.json()));\n  }\n\n  viewPhone(id){\n\n\t  return this.http.get('http://localhost:3000/phone/viewPhone/'+id)\n\t    .pipe(map(res => res.json()));\n  }\n\n}\n\n\n\n\n\n    \n \n\n\n\n  \n\n     ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}